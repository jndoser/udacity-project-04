name: Backend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches: 
      - master

jobs:
  run-test:

    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Python environment.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install the pipenv dependencies.
      - run: pip install pipenv

      # Install dependencies
      - run: cd starter/backend && pipenv install

      # Run the tests.
      - run: cd starter/backend && pipenv run test

      # Send a console message at completion.
      - run: |
          echo "Testing done."

  run-lint:

    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Python environment.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install the pipenv dependencies.
      - run: pip install pipenv

      # Install dependencies
      - run: cd starter/backend && pipenv install && pipenv install -d

      # Run the linter.
      - run: cd starter/backend && pipenv run lint

      # Send a console message at completion.
      - run: |
          echo "Linting done."

  run-build:
    runs-on: ubuntu-latest
    
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}

    needs: [run-test, run-lint]

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Python environment.
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install the pipenv dependencies.
      - run: pip install pipenv

      # Install dependencies
      - run: cd starter/backend && pipenv install && pipenv install -d

      # Build BE application with docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: starter/backend
          push: true
          tags: nhl0docker1/mp-backend:latest

      # Send a console message at completion.
      - run: |
          echo "Build done."


        
